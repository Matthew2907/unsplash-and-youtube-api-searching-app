{"version":3,"sources":["components/SearchBar.js","components/ImageCard.js","components/ImageList.js","api/unsplash.js","components/App.js","index.js"],"names":["SearchBar","state","term","onFormSubmit","event","preventDefault","props","onSubmit","onInputChange","setState","target","value","toUpperCase","className","this","type","onChange","React","Component","ImageCard","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","createRef","addEventListener","image","description","urls","style","gridRowEnd","ref","src","regular","alt","ImageList","images","map","id","axios","create","baseURL","headers","Authorization","App","onSearchSubmit","a","unsplash","get","params","query","response","data","results","ReactDOM","render","document","querySelector"],"mappings":"qVAoCeA,E,4MA/BXC,MAAQ,CACJC,KAAM,I,EAGVC,aAAe,SAACC,GACZA,EAAMC,iBACN,EAAKC,MAAMC,SAAS,EAAKN,MAAMC,O,EAGnCM,cAAgB,SAACJ,GACb,EAAKK,SAAS,CACVP,KAAME,EAAMM,OAAOC,MAAMC,iB,4CAIjC,WACI,OACI,qBAAKC,UAAU,uBAAf,SACI,sBAAMA,UAAU,UAAUN,SAAUO,KAAKX,aAAzC,SACI,qBAAKU,UAAU,QAAf,SACI,kCACI,sBAAMA,UAAU,wBAAhB,0BACA,uBAAOF,MAAOG,KAAKb,MAAMC,KAAMa,KAAK,OAAOC,SAAUF,KAAKN,6B,GAvB9DS,IAAMC,WCmCdC,E,kDApCZ,WAAYb,GAAQ,IAAD,8BACf,cAAMA,IAWVc,SAAW,WACR,IAAMC,EAAS,EAAKC,SAASC,QAAQC,aAC/BC,EAAQC,KAAKC,KAAKN,EAAS,IAEjC,EAAKZ,SAAS,CACVgB,WAfH,EAAKxB,MAAQ,CACTwB,MAAO,GAEX,EAAKH,SAAWL,IAAMW,YALP,E,qDAQnB,WACId,KAAKQ,SAASC,QAAQM,iBAAiB,OAAQf,KAAKM,Y,oBAYxD,WAAU,IAAD,EACuBN,KAAKR,MAAMwB,MAAhCC,EADF,EACEA,YAAaC,EADf,EACeA,KAEpB,OACI,qBAAKC,MAAO,CAACC,WAAW,QAAD,OAAUpB,KAAKb,MAAMwB,QAA5C,SACI,qBACIU,IAAKrB,KAAKQ,SACVc,IAAKJ,EAAKK,QACVC,IAAKP,U,GA9BDd,IAAMC,WCWdqB,G,MARE,SAAAjC,GACd,IAAMkC,EAASlC,EAAMkC,OAAOC,KAAI,SAAAX,GAC5B,OAAO,cAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAMY,OAGjC,OAAO,qBAAK7B,UAAU,aAAf,SAA6B2B,M,QCRzBG,E,OAAAA,EAAMC,OAAO,CACzBC,QAAS,2BACRC,QAAS,CACLC,cAAe,2DC2BRC,G,kNAxBX/C,MAAQ,CACJuC,OAAQ,I,EAGZS,e,uCAAiB,WAAO/C,GAAP,eAAAgD,EAAA,sEACUC,EAASC,IAAI,iBAAkB,CAClDC,OAAQ,CAAEC,MAAOpD,KAFR,OACPqD,EADO,OAKb,EAAK9C,SAAS,CACV+B,OAAQe,EAASC,KAAKC,UANb,2C,kGAUjB,WACI,OACI,sBAAK5C,UAAU,mBAAf,UACI,cAAC,EAAD,CAAWN,SAAUO,KAAKmC,iBAC1B,cAAC,EAAD,CAAWT,OAAQ1B,KAAKb,MAAMuC,gB,GAnB5BvB,IAAMC,YCFxBwC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,cAAc,Y","file":"static/js/main.ff9877cd.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends React.Component {\r\n    state = {\r\n        term: '',\r\n    }\r\n\r\n    onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state.term);\r\n    }\r\n\r\n    onInputChange = (event) => {\r\n        this.setState({\r\n            term: event.target.value.toUpperCase(),\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ui segment searchbar\">\r\n                <form className=\"ui form\" onSubmit={this.onFormSubmit}>\r\n                    <div className=\"field\">\r\n                        <label>\r\n                            <span className=\"searchbar__label-span\">Image Search</span>\r\n                            <input value={this.state.term} type=\"text\" onChange={this.onInputChange}/>\r\n                        </label>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\n\r\nclass ImageCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            spans: 0,\r\n        };\r\n        this.imageRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.imageRef.current.addEventListener('load', this.setSpans);\r\n    }\r\n\r\n    setSpans = () => {\r\n       const height = this.imageRef.current.clientHeight;\r\n       const spans = Math.ceil(height / 10);\r\n\r\n       this.setState({\r\n           spans,\r\n       });\r\n    };\r\n\r\n    render() {\r\n        const {description, urls} = this.props.image;\r\n\r\n        return (\r\n            <div style={{gridRowEnd: `span ${this.state.spans}`}}>\r\n                <img\r\n                    ref={this.imageRef}\r\n                    src={urls.regular}\r\n                    alt={description}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport  default ImageCard;\r\n","import React from 'react';\r\n\r\nimport ImageCard from './ImageCard';\r\nimport './ImageList.css';\r\n\r\nconst ImageList = props => {\r\n    const images = props.images.map(image => {\r\n        return <ImageCard key={image.id} image={image} />;\r\n    });\r\n\r\n    return <div className=\"image-list\">{images}</div>;\r\n};\r\n\r\nexport default  ImageList;","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n   baseURL: 'https://api.unsplash.com',\r\n    headers: {\r\n        Authorization: 'Client-ID BS64hj3OiYms_K2sOP556dqrJJoBmHExtx7IwPLl9qs',\r\n    },\r\n});","import React from 'react';\r\n\r\nimport SearchBar from './SearchBar';\r\nimport ImageList from \"./ImageList\";\r\nimport unsplash from '../api/unsplash';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        images: [],\r\n    };\r\n\r\n    onSearchSubmit = async (term) => {\r\n        const response = await unsplash.get('/search/photos', {\r\n            params: { query: term }\r\n        });\r\n\r\n        this.setState({\r\n            images: response.data.results,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ui container app\">\r\n                <SearchBar onSubmit={this.onSearchSubmit} />\r\n                <ImageList images={this.state.images} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App/>, document.querySelector('#root'));"],"sourceRoot":""}